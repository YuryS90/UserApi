{% extends "./layouts/main.twig" %}

{% block content %}
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Заказы</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">
                            <a href="{{ url_for('home') }}">Главная</a>
                        </li>
                        <li class="breadcrumb-item active">Заказы</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            {#                            <a href="{{ url_for('order.create') }}" class="btn btn-primary">Добавить</a> #}
                            <a href="#" class="btn btn-primary">Добавить</a>
                        </div>

                        <div class="card-body table-responsive p-0">
                            <table class="table table-hover text-nowrap">
                                <thead>
                                <tr>
                                    <th>№ заказа</th>
                                    <th>Клиент</th>
                                    <th>Адрес</th>
                                    <th>Сумма заказа</th>
                                    <th>Статус</th>
                                    <th>Дата и время заказа</th>
                                </tr>
                                </thead>

                                <tbody id="ordersTableBody">

                                {% for order in orders %}
                                    <tr>
                                        <td>{{ order.id }}</td>
                                        <td>
                                            <a href="{{ url_for('order.show', { 'order': order.id }) }}">
                                                {{ order.userId }}</a>
                                        </td>
                                        <td>{{ order.address }}</td>
                                        <td>{{ order.totalPrice }}</td>
                                        <td>{{ order.statusId }}</td>
                                        <td>{{ order.created }}</td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        // Подключение к WebSocket-серверу Workerman
        const ws = new WebSocket('ws://127.0.0.1:2346');

        ws.onmessage = function (event) {
            console.log("Получено сообщение:", event.data); // отладка
            try {
                const data = JSON.parse(event.data); // Попытка декодировать JSON
                console.log("Декодированные данные:", data); // отладка

                const orderNo = data.orderNo;
                const message = data.message;

                // Пример уведомления о новом заказе (можно заменить на реальное уведомление)
                alert(message);

                const tableBody = document.getElementById('ordersTableBody');
                const newRow = document.createElement('tr');

                // Создаем новую строку для таблицы заказов
                newRow.innerHTML = `
                <td>${orderNo}</td>
                <td>${data.userId || 'Неизвестный пользователь'}</td>
                <td>${data.address || 'Адрес не указан'}</td>
                <td>${data.totalPrice || '0.00'}</td>
                <td>${data.statusId || 'Неизвестный статус'}</td>
                <td>${data.created || 'Дата неизвестна'}</td>
            `;

                // Добавляем новый заказ в начало таблицы
                tableBody.insertBefore(newRow, tableBody.firstChild);
                // Добавляем новую строку в таблицу заказов
                //document.getElementById('ordersTableBody').innerHTML += newRow;
            } catch (e) {
                console.error("Ошибка при обработке сообщения:", e);
            }
        }

        ws.onopen = function () {
            console.log('WebSocket connection opened');
        };

        ws.onclose = function () {
            console.log('WebSocket connection closed');
        };


        // Обработчик сообщений от WebSocket-сервера
        {#ws.onmessage = function (event) {#}
        {#    const newOrder = JSON.parse(event.data);#}

        {#    // Обновление таблицы с заказами#}
        {#    const tableBody = document.getElementById('ordersTableBody');#}
        {#    const newRow = document.createElement('tr');#}

        {#    newRow.innerHTML = `#}
        {#    <td>${newOrder.orderId}</td>#}
        {#    <td><a href="{{ url_for('order.show', { 'order': '${newOrder.orderId}' }) }}">${newOrder.userEmail}</a></td>#}
        {#    <td>${newOrder.address || 'N/A'}</td>#}
        {#    <td>${newOrder.totalPrice}</td>#}
        {#    <td>${newOrder.status}</td>#}
        {#    <td>${new Date().toLocaleString()}</td>#}
        {#`;#}

        {#    // Добавляем новый заказ в начало таблицы#}
        {#    tableBody.insertBefore(newRow, tableBody.firstChild);#}
        {#};#}

        {#// Обработчик ошибок WebSocket#}
        {#ws.onerror = function (error) {#}
        {#    console.error('WebSocket error:', error);#}
        {#};#}
    </script>
{% endblock %}