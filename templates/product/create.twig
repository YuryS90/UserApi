{% extends "./layouts/main.twig" %}

{% block content %}


    {% if error %}
        <div class="card-body">
            <div class="alert alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h5><i class="icon fas fa-ban"></i> Ошибка!</h5>
                {{ error }}
            </div>
        </div>
    {% endif %}

    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Добавить продукт</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">
                            <a href="{{ url_for('home') }}">Главная</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="{{ url_for('user.index') }}">Продуты</a></li>
                        <li class="breadcrumb-item active">Добавление</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="row">
            <div class="col-md-8">
                <form action="{{ url_for('product.store') }}" method="post" enctype="multipart/form-data"
                      novalidate="novalidate" id="quickForm">
                    {{ csrf_field() | raw }}

                    <div class="form-group">
                        <input type="text" name="article" class="form-control"
                               placeholder="Введите артикул" value="{{ old.article }}">
                    </div>

                    <div class="form-group">
                        <input type="text" name="title" class="form-control"
                               placeholder="Введите название товара" value="{{ old.title }}">
                    </div>

                    <!-- Поля для описания (JSON) -->
                    <div id="fields"></div>
                    <div class="form-group">
                        <button type="button" id="addField" class="btn btn-info">Добавить описание</button>
                    </div>

                    <div class="form-group">
                        <input type="text" name="new_price" class="form-control"
                               placeholder="Введите актуальную цену" value="{{ old.article }}">
                    </div>

                    <div class="form-group">
                        <input type="text" name="old_price" class="form-control"
                               placeholder="Введите старую цену" value="{{ old.article }}">
                    </div>

                    <div class="form-group">
                        <input type="number" name="count" class="form-control"
                               placeholder="Введите количество" value="{{ old.article }}">
                    </div>

                    <div class="form-group">
                        {# Сделать выбор категории #}
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="custom-file">
                                <input name="preview_image" type="file" class="custom-file-label" id="exampleInputFile">
                                <label class="custom-file-label" for="exampleInputFile">Выбрать файл</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="select2-purple">
                            <select name="tags[]" class="tags" multiple="multiple" data-placeholder="Выбрать тег(и)"
                                    data-dropdown-css-class="select2-purple" style="width: 100%;">
                                <option>Alabama</option>
                                <option>Alaska</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="select2-purple">
                            <select name="colors[]" class="colors" multiple="multiple" data-placeholder="Выбрать цвет(а)"
                                    data-dropdown-css-class="select2-purple" style="width: 100%;">
                                <option>Alabama</option>
                                <option>Alaska</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Добавить</button>
                    </div>

                </form>
            </div>
        </div>
    </section>

    <script>
        document.getElementById('addField').addEventListener('click', function () {
            // querySelectorAll выбирает все элементы с атрибутом name, которые начинаются с "key"
            // length возвращает количество найденных элементов
            let currentNumber = document.querySelectorAll('[name^="key"]').length + 1;

            // Создаем новый блок полей для характеристики
            let newField = document.createElement('div');

            // Добавляем классы к новому блоку
            newField.classList.add('form-group');
            newField.classList.add('d-flex');

            newField.innerHTML = `
                <input type="text" name="key${currentNumber}" class="form-control" placeholder="Название" required>
                <input type="text" name="value${currentNumber}" class="form-control" placeholder="Значение" required>
<!--<a class="btn btn-app">-->
<!--<i class="fas fa-delete"></i> Edit-->
<!--</a>-->
                <button type="button" class="form-control col-2 btn btn-danger" onclick="removeField(this)">Удалить</button>
            `;

            // appendChild добавляет дочерний элемент newField к элементу с id = fields
            document.getElementById('fields').appendChild(newField);
        });

        // Функция для удаления поля
        function removeField(button) {
            let fieldToRemove = button.parentElement;
            fieldToRemove.remove();
        }

        {# document.getElementById('quickForm').addEventListener('submit', function (e) { #}
        {#    e.preventDefault(); #}

        {#    // Получаем данные из формы #}
        {#    let formData = new FormData(this); #}

        {#    // Собираем объект описания из полей ввода #}
        {#    let description = {}; #}
        {#    formData.forEach((value, key) => { #}
        {#        // key.start... проверяет, начинается ли строка key с подстроки 'key' #}
        {#        // formData.has... проверяет, есть ли в formData элемент с именем 'value' #}
        {#        // и номером, который является подстрокой строки key, начиная с третьего символа (слова key) #}
        {#        if (key.startsWith('key') && formData.has('value' + key.substring(3))) { #}
        {#            // Добавляем характеристику в объект описания #}
        {#            description[value] = formData.get('value' + key.substring(3)); #}
        {#        } #}
        {#    }); #}

        {#    // Добавляем JSON-строку с описанием в данные формы #}
        {#    formData.append('descriptionJSON', JSON.stringify(description)); #}

        {#    // Отправляем форму на сервер #}
        {#    fetch("{{ url_for('product.store') }}", { #}
        {#        method: 'POST', #}
        {#        body: formData #}
        {#    }) #}
        {#        .then(response => response.json()) #}
        {#        .then(data => { #}
        {#            // Обработка ответа от сервера, если необходимо #}
        {#            console.log(data); #}
        {#        }) #}
        {#        .catch(error => console.error('Ошибка:', error)); #}
        {# }); #}
    </script>
{% endblock %}